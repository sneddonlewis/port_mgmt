name: CI

on:
  push:
  pull_request:

jobs:
  build-and-test:

    name: ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        toolchain:
          - linux-gcc
          - macos-clang

        configuration:
          - Debug

        include:
          - toolchain: linux-gcc
            os: ubuntu-latest
            compiler: gcc
          - toolchain: macos-clang
            os: macOS-latest
            compiler: clang

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y libpq-dev
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
          brew install libpq
          echo "LDFLAGS=-L/opt/homebrew/opt/libpq/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I/opt/homebrew/opt/libpq/include" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/opt/homebrew/opt/libpq/lib/pkgconfig" >> $GITHUB_ENV
        fi

    - name: Configure (${{ matrix.configuration }})
      run: cmake -S . -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}

    - name: Build with ${{ matrix.compiler }}
      run: cmake --build build --config ${{ matrix.configuration }}

    - name: Test
      working-directory: build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: ctest -C ${{ matrix.configuration }}
